#name: Build and Deploy for Production Environment
#
#on:
#  push:
#    branches:
#      - release
#
#env:
#  ECR_REPOSITORY: standard-template
#
#jobs:
#  build:
#    name: Deploy to AWS Production
#    runs-on: ubuntu-latest
#    environment: prod
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Set Yaml
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: ./src/main/resources/application-common.yml
#        env:
#          spring.cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          spring.cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Build, tag, and push image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build --build-arg ENVIRONMENT=prod -t $ECR_REGISTRY/$ECR_REPOSITORY:latest . -f docker/prod.Dockerfile
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
#          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT
#
#      - name: CDK Bootstrap
#        working-directory: cdk
#        run: |
#          npm install
#          npx cdk bootstrap
#        env:
#          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: CDK Synth
#        working-directory: cdk
#        run: npx cdk synth
#        env:
#          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: CDK Deploy
#        working-directory: cdk
#        run: npx cdk deploy --require-approval never
#        env:
#          AWS_TAG_ENV: prod
#          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: Update ECS Service
#        run: aws ecs update-service --cluster standard-template --service standard-template --force-new-deployment
